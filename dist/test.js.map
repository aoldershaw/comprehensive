{"version":3,"file":"test.js","sourceRoot":"","sources":["../src/test.ts"],"names":[],"mappings":";;;;;;AAAA,iDAAwC;AAExC,0DAA0D;AAC1D,oFAAoF;AACpF,0FAA0F;AAC1F,wFAAwF;AACxF,UAAU;AAEV,8CAA8C;AAC9C,0FAA0F;AAC1F,gCAAgC;AAChC,oDAAoD;AAEpD,2DAA2D;AAC3D,mDAAmD;AACnD,gEAAgE;AAChE,8CAA8C;AAC9C,uDAAuD;AACvD,mEAAmE;AACnE,OAAO,CAAC,GAAG,CAAC,qBAAK,uFAAA,MAAO,EAAY,QAAS,EAAG,EAAE,KAA1B,UAAA,EAAE,IAAI,OAAA,EAAE,GAAG,CAAC,EAAN,CAAM,EAAS,CAAC,CAAC,CAAC,EAAG,CAAA;;AACnD,sDAAsD;AACtD,sDAAsD;AACtD,iEAAiE;AAEjE,sBAAsB;AACtB,mDAAmD","sourcesContent":["import { toObj } from './comprehensive';\n\n// const objects = [{a: 'hello', b: 1}, {a: 'test', b: 2}]\n// toObj`{${() => context.obj.a}: ${() => context.obj.b + 1} for obj in ${objects}}`\n// toObj`{${() => context.obj.a}: ${() => context.obj.b + 1} for ${'name'} in ${objects}}`\n// toObj`${() => context.obj.a}: ${() => context.obj.b + 1} for ${'name'} in ${objects}`\n// toObj``\n\n// toObj`{obj.a: obj.b for obj of ${objects}}`\n// console.log(toObj`{${() => ctx.obj.a}: ${() => ctx.obj.b ** 2} for obj of ${objects}}`)\n// const nums = [1, 2, 3, 4, 5];\n// console.log(toObj`${self}: ${self} over ${nums}`)\n\n// console.log(toObj`{obj.a: obj.b for obj of ${objects}}`)\n// console.log(toObj`{it.a: it.b over ${objects}}`)\n// console.log(toObj`{it.a: ${it => it.b + 1} over ${objects}}`)\n// const names = 'Aidan,Liam,Becca'.split(',')\n// console.log(toObj`{it: ${true} for it of ${names}}`)\n// console.log(toObjSafe`{it: ${it => it + '-san'} over ${names}}`)\nconsole.log(toObj`it: ${it => it + 1} over ${[1]}`)\n// tag`{obj.a: ${obj => obj.b} for obj of ${objects}}`\n// tag`{${obj => obj.a}: obj.b for obj of ${objects}}`\n// tag`{${obj => obj.a}: ${obj => obj.b} for obj of ${objects}}}`\n\n// Alternative syntax:\n// toObj`${o => o.a} : ${o => o.b} over ${objects}`"]}